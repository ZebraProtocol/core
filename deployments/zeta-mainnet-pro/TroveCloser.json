{
  "address": "0x29ec3560298f74C0da22d725178F2667F91addC1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IZebraCore",
          "name": "_core",
          "type": "address"
        },
        {
          "internalType": "contract IZebraUSD",
          "name": "_zebraUSD",
          "type": "address"
        },
        {
          "internalType": "contract IWZeta",
          "name": "_wzeta",
          "type": "address"
        },
        {
          "internalType": "contract IIzumiSwap",
          "name": "_swap",
          "type": "address"
        },
        {
          "internalType": "contract IIzumiQuoter",
          "name": "_quoter",
          "type": "address"
        },
        {
          "internalType": "contract IBorrowerOperations",
          "name": "_bo",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ZebraCore",
      "outputs": [
        {
          "internalType": "contract IZebraCore",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bo",
      "outputs": [
        {
          "internalType": "contract IBorrowerOperations",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITroveManager",
          "name": "tm",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "path",
          "type": "bytes"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITroveManager",
          "name": "tm",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "path",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "estimateClose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "desire",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "cost",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoter",
      "outputs": [
        {
          "internalType": "contract IIzumiQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swap",
      "outputs": [
        {
          "internalType": "contract IIzumiSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wzeta",
      "outputs": [
        {
          "internalType": "contract IWZeta",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zebraUSD",
      "outputs": [
        {
          "internalType": "contract IZebraUSD",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x17e1dbf9e86b4eb1fc1eed13abf4385352d0c1acfecc17e4583d5c8f46ac3ce7",
  "receipt": {
    "to": null,
    "from": "0x25ef13163230C64aDb4A17BF23f1CAB09f54627e",
    "contractAddress": "0x29ec3560298f74C0da22d725178F2667F91addC1",
    "transactionIndex": 67,
    "gasUsed": "1266621",
    "logsBloom": "0x
    "blockHash": "0xa32bec8c2769cdc9af035202a26de539e9a64ad2fabaff51b5e97591a0e10cf8",
    "transactionHash": "0x17e1dbf9e86b4eb1fc1eed13abf4385352d0c1acfecc17e4583d5c8f46ac3ce7",
    "logs": [
      {
        "transactionIndex": 67,
        "blockNumber": 2460604,
        "transactionHash": "0x17e1dbf9e86b4eb1fc1eed13abf4385352d0c1acfecc17e4583d5c8f46ac3ce7",
        "address": "0x5F0b1a82749cb4E2278EC87F8BF6B618dC71a8bf",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x00000000000000000000000029ec3560298f74c0da22d725178f2667f91addc1",
          "0x00000000000000000000000034bc1b87f60e0a30c0e24fd7abada70436c71406"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 223,
        "blockHash": "0xa32bec8c2769cdc9af035202a26de539e9a64ad2fabaff51b5e97591a0e10cf8"
      }
    ],
    "blockNumber": 2460604,
    "cumulativeGasUsed": "9554300",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB4CEF4682eD12E609624f494aca5c3418C838462",
    "0x5d8Dc3b34D7B07BB09495c480AD629900c0A2e02",
    "0x5F0b1a82749cb4E2278EC87F8BF6B618dC71a8bf",
    "0x34bc1b87f60e0a30c0e24FD7Abada70436c71406",
    "0x04830cfCED9772b8ACbAF76Cfc7A630Ad82c9148",
    "0x05cF5DC3Db0b5EAC9d5Bd536B0a2cc6805e7122d"
  ],
  "numDeployments": 23,
  "solcInputHash": "18fcbc7cb49dc5e28fb375de0962c532",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IZebraCore\",\"name\":\"_core\",\"type\":\"address\"},{\"internalType\":\"contract IZebraUSD\",\"name\":\"_zebraUSD\",\"type\":\"address\"},{\"internalType\":\"contract IWZeta\",\"name\":\"_wzeta\",\"type\":\"address\"},{\"internalType\":\"contract IIzumiSwap\",\"name\":\"_swap\",\"type\":\"address\"},{\"internalType\":\"contract IIzumiQuoter\",\"name\":\"_quoter\",\"type\":\"address\"},{\"internalType\":\"contract IBorrowerOperations\",\"name\":\"_bo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ZebraCore\",\"outputs\":[{\"internalType\":\"contract IZebraCore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bo\",\"outputs\":[{\"internalType\":\"contract IBorrowerOperations\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITroveManager\",\"name\":\"tm\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITroveManager\",\"name\":\"tm\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"estimateClose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"desire\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoter\",\"outputs\":[{\"internalType\":\"contract IIzumiQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"contract IIzumiSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wzeta\",\"outputs\":[{\"internalType\":\"contract IWZeta\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zebraUSD\",\"outputs\":[{\"internalType\":\"contract IZebraUSD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helpers/TroveCloser.sol\":\"TroveCloser\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/dependencies/ZebraOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"../interfaces/IZebraCore.sol\\\";\\n\\n/**\\n    @title Zebra Ownable\\n    @notice Contracts inheriting `ZebraOwnable` have the same owner as `ZebraCore`.\\n            The ownership cannot be independently modified or renounced.\\n */\\ncontract ZebraOwnable {\\n\\tIZebraCore public immutable ZebraCore;\\n\\n\\tconstructor(IZebraCore _ZebraCore) {\\n\\t\\tZebraCore = _ZebraCore;\\n\\t}\\n\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(msg.sender == owner(), \\\"Only owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier onlyGuardian() {\\n\\t\\trequire(msg.sender == guardian(), \\\"Only guardian\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction owner() public view returns (address) {\\n\\t\\treturn ZebraCore.owner();\\n\\t}\\n\\n\\tfunction guardian() public view returns (address) {\\n\\t\\treturn ZebraCore.guardian();\\n\\t}\\n}\\n\",\"keccak256\":\"0xf83586dd50672e8a5f87f318ce32051c8f236991115eaff9d9e18b8dd457d54b\",\"license\":\"MIT\"},\"contracts/helpers/TroveCloser.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"../interfaces/IWZeta.sol\\\";\\nimport \\\"../interfaces/IZebraUSD.sol\\\";\\nimport \\\"../interfaces/IIzumiSwap.sol\\\";\\nimport \\\"../interfaces/IIzumiQuoter.sol\\\";\\nimport \\\"../interfaces/IBorrowerOperations.sol\\\";\\nimport \\\"../interfaces/ITroveManager.sol\\\";\\nimport \\\"../dependencies/ZebraOwnable.sol\\\";\\n\\ncontract TroveCloser is ZebraOwnable {\\n\\tIZebraUSD public immutable zebraUSD;\\n\\tIWZeta public immutable wzeta;\\n\\tIIzumiSwap public immutable swap;\\n\\tIIzumiQuoter public immutable quoter;\\n\\tIBorrowerOperations public immutable bo;\\n\\n\\tconstructor(IZebraCore _core, IZebraUSD _zebraUSD, IWZeta _wzeta, IIzumiSwap _swap, IIzumiQuoter _quoter, IBorrowerOperations _bo) ZebraOwnable(_core) {\\n\\t\\tzebraUSD = _zebraUSD;\\n\\t\\twzeta = _wzeta;\\n\\t\\tswap = _swap;\\n\\t\\tquoter = _quoter;\\n\\t\\tbo = _bo;\\n\\t\\twzeta.approve(address(swap), type(uint256).max);\\n\\t}\\n\\n\\tfunction estimateClose(ITroveManager tm, bytes memory path, address borrower) external returns (uint256 balance, uint128 desire, uint256 cost) {\\n\\t\\t(, uint256 debt) = tm.getTroveCollAndDebt(borrower);\\n\\t\\tuint256 totalDebt = debt + tm.getTroveInterest(borrower, debt) - tm.DEBT_GAS_COMPENSATION();\\n\\t\\tbalance = zebraUSD.balanceOf(borrower);\\n\\t\\tif (totalDebt <= balance) {\\n\\t\\t\\treturn (balance, 0, 0);\\n\\t\\t}\\n\\t\\tdesire = uint128(totalDebt - balance);\\n\\t\\t(cost, ) = quoter.swapDesire(desire, path);\\n\\t}\\n\\n\\tfunction close(ITroveManager tm, bytes memory path) external payable {\\n\\t\\taddress borrower = msg.sender;\\n\\t\\tuint256 usdBalance = zebraUSD.balanceOf(borrower);\\n\\t\\tzebraUSD.transferFrom(borrower, address(this), usdBalance);\\n\\t\\t(, uint256 debt) = tm.getTroveCollAndDebt(borrower);\\n\\t\\tuint256 totalDebt = debt + tm.getTroveInterest(borrower, debt) - tm.DEBT_GAS_COMPENSATION();\\n\\t\\tif (usdBalance < totalDebt) {\\n\\t\\t\\trequire(msg.value > 0, \\\"no ether provided\\\");\\n\\t\\t\\twzeta.deposit{ value: msg.value }();\\n\\t\\t\\tuint256 zetaBalance = wzeta.balanceOf(address(this));\\n\\t\\t\\ttry swap.swapDesire(IIzumiSwap.SwapDesireParams({ path: path, recipient: address(this), desire: uint128(totalDebt - usdBalance), maxPayed: zetaBalance, deadline: type(uint256).max })) returns (uint256, uint256) {} catch (bytes memory e) {\\n\\t\\t\\t\\trevert(string(e));\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\ttry bo.closeTrove(tm, borrower) {} catch (bytes memory err) {\\n\\t\\t\\trevert(string(err));\\n\\t\\t}\\n\\t\\tuint256 remain = zebraUSD.balanceOf(address(this));\\n\\t\\tif (remain > 0) {\\n\\t\\t\\tzebraUSD.transfer(borrower, remain);\\n\\t\\t}\\n\\t\\tuint256 remainColl = wzeta.balanceOf(address(this));\\n\\t\\tif (remainColl > 0) {\\n\\t\\t\\twzeta.transfer(borrower, remainColl);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction emergencyWithdraw(IERC20 token, address to, uint256 amount) external onlyOwner {\\n\\t\\tif (address(token) == address(0)) {\\n\\t\\t\\t(bool success, ) = to.call{ value: amount }(\\\"\\\");\\n\\t\\t\\trequire(success, \\\"withdraw zeta failed\\\");\\n\\t\\t} else {\\n\\t\\t\\ttoken.transfer(to, amount);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0x855ab941a8d613b356eece8f8e39ea536a2da39835cce212faeec0c903200608\",\"license\":\"MIT\"},\"contracts/interfaces/IBorrowerOperations.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./ITroveManager.sol\\\";\\n\\ninterface IBorrowerOperations {\\n\\tstruct SystemBalances {\\n\\t\\tuint256[] collaterals;\\n\\t\\tuint256[] debts;\\n\\t\\tuint256[] prices;\\n\\t}\\n\\n\\tenum BorrowerOperation {\\n\\t\\topenTrove,\\n\\t\\tcloseTrove,\\n\\t\\tadjustTrove\\n\\t}\\n\\n\\tevent BorrowingFeePaid(address indexed borrower, uint256 amount);\\n\\tevent CollateralConfigured(ITroveManager troveManager, IERC20 collateralToken);\\n\\tevent TroveCreated(address indexed _borrower, uint256 arrayIndex);\\n\\tevent TroveManagerRemoved(ITroveManager troveManager);\\n\\tevent TroveUpdated(address indexed _borrower, uint256 _debt, uint256 _coll, uint256 stake, BorrowerOperation operation);\\n\\n\\tfunction addColl(ITroveManager troveManager, address account, uint256 _collateralAmount, address _upperHint, address _lowerHint) external;\\n\\n\\tfunction adjustTrove(ITroveManager troveManager, address account, uint256 _maxFeePercentage, uint256 _collDeposit, uint256 _collWithdrawal, uint256 _debtChange, bool _isDebtIncrease, address _upperHint, address _lowerHint) external;\\n\\n\\tfunction closeTrove(ITroveManager troveManager, address account) external;\\n\\n\\tfunction configureCollateral(ITroveManager troveManager, IERC20 collateralToken) external;\\n\\n\\tfunction fetchBalances() external returns (SystemBalances memory balances);\\n\\n\\tfunction getGlobalSystemBalances() external returns (uint256 totalPricedCollateral, uint256 totalDebt);\\n\\n\\tfunction getTCR() external returns (uint256 globalTotalCollateralRatio);\\n\\n\\tfunction openTrove(ITroveManager troveManager, address account, uint256 _maxFeePercentage, uint256 _collateralAmount, uint256 _debtAmount, address _upperHint, address _lowerHint) external;\\n\\n\\tfunction removeTroveManager(ITroveManager troveManager) external;\\n\\n\\tfunction repayDebt(ITroveManager troveManager, address account, uint256 _debtAmount, address _upperHint, address _lowerHint) external;\\n\\n\\tfunction setMinNetDebt(uint256 _minNetDebt) external;\\n\\n\\tfunction withdrawColl(ITroveManager troveManager, address account, uint256 _collWithdrawal, address _upperHint, address _lowerHint) external;\\n\\n\\tfunction withdrawDebt(ITroveManager troveManager, address account, uint256 _maxFeePercentage, uint256 _debtAmount, address _upperHint, address _lowerHint) external;\\n\\n\\tfunction factory() external view returns (address);\\n\\n\\tfunction getCompositeDebt(uint256 _debt) external view returns (uint256);\\n\\n\\tfunction minNetDebt() external view returns (uint256);\\n\\n\\tfunction checkRecoveryMode(uint256 TCR) external pure returns (bool);\\n}\\n\",\"keccak256\":\"0x5cab9594ba308880bc3b0624422faef2673bf306c7f08d898e82544afa6c15aa\",\"license\":\"MIT\"},\"contracts/interfaces/IIzumiQuoter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\n// 0x04830cfCED9772b8ACbAF76Cfc7A630Ad82c9148\\ninterface IIzumiQuoter {\\n\\tfunction swapDesire(uint128 desire, bytes memory path) external returns (uint256 cost, int24[] memory pointAfterList);\\n}\\n\",\"keccak256\":\"0x0d57cd12cb469e2c40ac17ad27b6aca48125f52bc8d4624b9087bba16e231b1c\",\"license\":\"MIT\"},\"contracts/interfaces/IIzumiSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\n// 0x34bc1b87f60e0a30c0e24FD7Abada70436c71406\\ninterface IIzumiSwap {\\n\\tstruct SwapDesireParams {\\n\\t\\tbytes path;\\n\\t\\taddress recipient;\\n\\t\\tuint128 desire;\\n\\t\\tuint256 maxPayed;\\n\\t\\tuint256 deadline;\\n\\t}\\n\\n\\t/// @notice Swap given amount of target token, usually used in multi-hop case.\\n\\tfunction swapDesire(SwapDesireParams calldata params) external payable returns (uint256 cost, uint256 acquire);\\n}\\n\",\"keccak256\":\"0x6f4113be8b8ebcfd81a53574af1945e71f2d92f031f7cfa769eca61d78f277e9\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"../interfaces/IPyth.sol\\\";\\n\\ninterface IPriceFeed {\\n\\tstruct OracleRecord {\\n\\t\\tIPyth pyth;\\n\\t\\tuint32 decimals;\\n\\t\\tuint32 heartbeat;\\n\\t\\tbool isFeedWorking;\\n\\t}\\n\\n\\tstruct PriceRecord {\\n\\t\\tuint96 scaledPrice;\\n\\t\\tuint32 timestamp;\\n\\t\\tuint32 lastUpdated;\\n\\t}\\n\\n\\tstruct FeedResponse {\\n\\t\\tint64 price;\\n\\t\\t// Confidence interval around the price\\n\\t\\tuint64 conf;\\n\\t\\t// Price exponent\\n\\t\\tint32 expo;\\n\\t\\t// Unix timestamp describing when the price was published\\n\\t\\tuint publishTime;\\n\\t\\tbool success;\\n\\t}\\n\\n\\t// Custom Errors --------------------------------------------------------------------------------------------------\\n\\n\\terror PriceFeed__InvalidFeedResponseError();\\n\\terror PriceFeed__FeedFrozenError();\\n\\terror PriceFeed__UnknownFeedError();\\n\\terror PriceFeed__HeartbeatOutOfBoundsError();\\n\\n\\t// Events ---------------------------------------------------------------------------------------------------------\\n\\n\\tevent NewOracleRegistered(address pyth);\\n\\tevent PriceFeedStatusUpdated(address oracle, bool isWorking);\\n\\tevent PriceRecordUpdated(uint256 _price);\\n\\n\\tfunction fetchPrice(address _token) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x8ef2b41df0f27e3c3a61cbcbd999aac5928199c7cd5dc7da2d93d7a58891a908\",\"license\":\"MIT\"},\"contracts/interfaces/IPyth.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\ninterface IPyth {\\n\\tstruct Price {\\n\\t\\t// Price\\n\\t\\tint64 price;\\n\\t\\t// Confidence interval around the price\\n\\t\\tuint64 conf;\\n\\t\\t// Price exponent\\n\\t\\tint32 expo;\\n\\t\\t// Unix timestamp describing when the price was published\\n\\t\\tuint publishTime;\\n\\t}\\n\\n\\tfunction getPrice(bytes32 id) external view returns (Price memory);\\n\\n\\tfunction getPriceUnsafe(bytes32 id) external view returns (Price memory price);\\n}\\n\",\"keccak256\":\"0xfd589468ff2885c85543d89042b18e7801be77d8586bddf27481830fb233bd01\",\"license\":\"MIT\"},\"contracts/interfaces/ISortedTroves.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\ninterface ISortedTroves {\\n\\tevent NodeAdded(address _id, uint256 _NICR);\\n\\tevent NodeRemoved(address _id);\\n\\n\\tfunction insert(address _id, uint256 _NICR, address _prevId, address _nextId) external;\\n\\n\\tfunction reInsert(address _id, uint256 _newNICR, address _prevId, address _nextId) external;\\n\\n\\tfunction remove(address _id) external;\\n\\n\\tfunction setAddresses(address _troveManagerAddress) external;\\n\\n\\tfunction contains(address _id) external view returns (bool);\\n\\n\\tfunction data() external view returns (address head, address tail, uint256 size);\\n\\n\\tfunction findInsertPosition(uint256 _NICR, address _prevId, address _nextId) external view returns (address, address);\\n\\n\\tfunction getFirst() external view returns (address);\\n\\n\\tfunction getLast() external view returns (address);\\n\\n\\tfunction getNext(address _id) external view returns (address);\\n\\n\\tfunction getPrev(address _id) external view returns (address);\\n\\n\\tfunction getSize() external view returns (uint256);\\n\\n\\tfunction isEmpty() external view returns (bool);\\n\\n\\tfunction troveManager() external view returns (address);\\n\\n\\tfunction validInsertPosition(uint256 _NICR, address _prevId, address _nextId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x568f6029aad06d63866b67a30cddcb6ca716b5163aac714d847189d09a2aaf31\",\"license\":\"MIT\"},\"contracts/interfaces/ITroveManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./IZebraBase.sol\\\";\\nimport \\\"./ISortedTroves.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\ninterface ITroveManager is IZebraBase {\\n\\t// Store the necessary data for a trove\\n\\tstruct Trove {\\n\\t\\tuint256 debt;\\n\\t\\tuint256 coll;\\n\\t\\tuint256 stake;\\n\\t\\tStatus status;\\n\\t\\tuint128 arrayIndex;\\n\\t}\\n\\n\\tstruct RedemptionTotals {\\n\\t\\tuint256 remainingDebt;\\n\\t\\tuint256 totalDebtToRedeem;\\n\\t\\tuint256 totalCollateralDrawn;\\n\\t\\tuint256 totalInterest;\\n\\t\\tuint256 collateralFee;\\n\\t\\tuint256 collateralToSendToRedeemer;\\n\\t\\tuint256 decayedBaseRate;\\n\\t\\tuint256 price;\\n\\t\\tuint256 totalDebtSupplyAtStart;\\n\\t}\\n\\n\\tstruct SingleRedemptionValues {\\n\\t\\tuint256 debtLot;\\n\\t\\tuint256 collateralLot;\\n\\t\\tuint256 interestLot;\\n\\t\\tbool cancelledPartial;\\n\\t}\\n\\n\\t// Object containing the collateral and debt snapshots for a given active trove\\n\\tstruct RewardSnapshot {\\n\\t\\tuint256 collateral;\\n\\t\\tuint256 debt;\\n\\t\\tuint256 interest;\\n\\t}\\n\\n\\tenum TroveManagerOperation {\\n\\t\\tapplyPendingRewards,\\n\\t\\tliquidateInNormalMode,\\n\\t\\tliquidateInRecoveryMode,\\n\\t\\tredeemCollateral\\n\\t}\\n\\n\\tenum Status {\\n\\t\\tnonExistent,\\n\\t\\tactive,\\n\\t\\tclosedByOwner,\\n\\t\\tclosedByLiquidation,\\n\\t\\tclosedByRedemption\\n\\t}\\n\\n\\tevent InsterstPaid(address _account, address _borrower, uint256 _interest);\\n\\tevent TroveUpdated(address indexed _borrower, uint256 _debt, uint256 _coll, uint256 _stake, TroveManagerOperation _operation);\\n\\tevent Redemption(uint256 _attemptedDebtAmount, uint256 _actualDebtAmount, uint256 _collateralSent, uint256 _InterestDebt, uint256 _collateralFee);\\n\\tevent BaseRateUpdated(uint256 _baseRate);\\n\\tevent LastFeeOpTimeUpdated(uint256 _lastFeeOpTime);\\n\\tevent TotalStakesUpdated(uint256 _newTotalStakes);\\n\\tevent SystemSnapshotsUpdated(uint256 _totalStakesSnapshot, uint256 _totalCollateralSnapshot);\\n\\tevent LTermsUpdated(uint256 _L_collateral, uint256 _L_debt);\\n\\tevent TroveSnapshotsUpdated(uint256 _L_collateral, uint256 _L_debt, uint256 _L_Interest_Debt);\\n\\tevent TroveIndexUpdated(address _borrower, uint256 _newIndex);\\n\\tevent CollateralSent(address _to, uint256 _amount);\\n\\tevent RewardClaimed(address indexed account, address indexed recipient, uint256 claimed);\\n\\n\\tfunction addCollateralSurplus(address borrower, uint256 collSurplus) external;\\n\\n\\tfunction applyPendingRewards(address _borrower) external returns (uint256 coll, uint256 debt);\\n\\n\\tfunction claimCollateral(address _receiver) external;\\n\\n\\tfunction closeTrove(address _borrower, address _receiver, uint256 collAmount, uint256 debtAmount) external;\\n\\n\\tfunction closeTroveByLiquidation(address _borrower) external;\\n\\n\\tfunction decayBaseRateAndGetBorrowingFee(uint256 _debt) external returns (uint256);\\n\\n\\tfunction decreaseDebtAndSendCollateral(address account, uint256 debt, uint256 coll) external;\\n\\n\\tfunction finalizeLiquidation(address _liquidator, uint256 _debt, uint256 _coll, uint256 _collSurplus, uint256 _debtGasComp, uint256 _collGasComp, uint256 _interest) external;\\n\\n\\tfunction getEntireSystemBalances() external returns (uint256, uint256, uint256);\\n\\n\\tfunction movePendingTroveRewardsToActiveBalances(uint256 _debt, uint256 _collateral) external;\\n\\n\\tfunction openTrove(address _borrower, uint256 _collateralAmount, uint256 _compositeDebt, uint256 NICR, address _upperHint, address _lowerHint) external returns (uint256 stake, uint256 arrayIndex);\\n\\n\\tfunction redeemCollateral(uint256 _debtAmount, address _firstRedemptionHint, address _upperPartialRedemptionHint, address _lowerPartialRedemptionHint, uint256 _partialRedemptionHintNICR, uint256 _maxIterations, uint256 _maxFeePercentage) external;\\n\\n\\tfunction setAddresses(address _priceFeedAddress, address _sortedTrovesAddress, IERC20 _collateralToken) external;\\n\\n\\tfunction setParameters(uint256 _minuteDecayFactor, uint256 _redemptionFeeFloor, uint256 _maxRedemptionFee, uint256 _borrowingFeeFloor, uint256 _maxBorrowingFee, uint256 _maxSystemDebt, uint256 _MCR, uint32 _interestRate) external;\\n\\n\\tfunction setPaused(bool _paused) external;\\n\\n\\tfunction setPriceFeed(address _priceFeedAddress) external;\\n\\n\\tfunction updateTroveFromAdjustment(bool _isDebtIncrease, uint256 _debtChange, uint256 _netDebtChange, bool _isCollIncrease, uint256 _collChange, address _upperHint, address _lowerHint, address _borrower, address _receiver) external returns (uint256, uint256, uint256);\\n\\n\\tfunction fetchPrice() external returns (uint256);\\n\\n\\tfunction distributeInterestDebt() external returns (uint256);\\n\\n\\tfunction repayInterest(address _account, address _borrower, uint256 _debt) external;\\n\\n\\tfunction BOOTSTRAP_PERIOD() external view returns (uint256);\\n\\n\\tfunction L_collateral() external view returns (uint256);\\n\\n\\tfunction L_debt() external view returns (uint256);\\n\\n\\tfunction MCR() external view returns (uint256);\\n\\n\\tfunction getTrove(address _borrower) external view returns (Trove memory);\\n\\n\\tfunction baseRate() external view returns (uint256);\\n\\n\\tfunction borrowerOperationsAddress() external view returns (address);\\n\\n\\tfunction borrowingFeeFloor() external view returns (uint256);\\n\\n\\tfunction collateralToken() external view returns (IERC20);\\n\\n\\tfunction defaultedCollateral() external view returns (uint256);\\n\\n\\tfunction defaultedDebt() external view returns (uint256);\\n\\n\\tfunction getBorrowingFee(uint256 _debt) external view returns (uint256);\\n\\n\\tfunction getBorrowingFeeWithDecay(uint256 _debt) external view returns (uint256);\\n\\n\\tfunction getBorrowingRate() external view returns (uint256);\\n\\n\\tfunction getBorrowingRateWithDecay() external view returns (uint256);\\n\\n\\tfunction getCurrentICR(address _borrower, uint256 _price) external view returns (uint256);\\n\\n\\tfunction getEntireDebtAndColl(address _borrower) external view returns (uint256 debt, uint256 coll, uint256 pendingDebtReward, uint256 pendingCollateralReward);\\n\\n\\tfunction getEntireSystemColl() external view returns (uint256);\\n\\n\\tfunction getEntireSystemDebt() external view returns (uint256);\\n\\n\\tfunction getGlobalSystemDebt() external view returns (uint256);\\n\\n\\tfunction getTroveInterest(address _borrower, uint256 _debt) external view returns (uint256);\\n\\n\\tfunction getRedemptionICR(address _borrower, uint256 _price) external view returns (uint256);\\n\\n\\tfunction getNominalICR(address _borrower) external view returns (uint256);\\n\\n\\tfunction getPendingCollAndDebtRewards(address _borrower) external view returns (uint256, uint256);\\n\\n\\tfunction getRedemptionFeeWithDecay(uint256 _collateralDrawn) external view returns (uint256);\\n\\n\\tfunction getRedemptionRate() external view returns (uint256);\\n\\n\\tfunction getRedemptionRateWithDecay() external view returns (uint256);\\n\\n\\tfunction getTotalActiveCollateral() external view returns (uint256);\\n\\n\\tfunction getTotalActiveDebt() external view returns (uint256);\\n\\n\\tfunction getTroveCollAndDebt(address _borrower) external view returns (uint256 coll, uint256 debt);\\n\\n\\tfunction getTroveFromTroveOwnersArray(uint256 _index) external view returns (address);\\n\\n\\tfunction getTroveOwnersCount() external view returns (uint256);\\n\\n\\tfunction getTroveStake(address _borrower) external view returns (uint256);\\n\\n\\tfunction getTroveStatus(address _borrower) external view returns (uint256);\\n\\n\\tfunction hasPendingRewards(address _borrower) external view returns (bool);\\n\\n\\tfunction lastCollateralError_Redistribution() external view returns (uint256);\\n\\n\\tfunction lastDebtError_Redistribution() external view returns (uint256);\\n\\n\\tfunction lastFeeOperationTime() external view returns (uint256);\\n\\n\\tfunction liquidationManager() external view returns (address);\\n\\n\\tfunction maxBorrowingFee() external view returns (uint256);\\n\\n\\tfunction maxRedemptionFee() external view returns (uint256);\\n\\n\\tfunction maxSystemDebt() external view returns (uint256);\\n\\n\\tfunction minuteDecayFactor() external view returns (uint256);\\n\\n\\tfunction paused() external view returns (bool);\\n\\n\\tfunction redemptionFeeFloor() external view returns (uint256);\\n\\n\\tfunction getRewardSnapshots(address) external view returns (RewardSnapshot memory);\\n\\n\\tfunction priceFeed() external view returns (IPriceFeed);\\n\\n\\tfunction sortedTroves() external view returns (ISortedTroves);\\n\\n\\tfunction sunsetting() external view returns (bool);\\n\\n\\tfunction surplusBalances(address) external view returns (uint256);\\n\\n\\tfunction systemDeploymentTime() external view returns (uint256);\\n\\n\\tfunction totalCollateralSnapshot() external view returns (uint256);\\n\\n\\tfunction totalStakes() external view returns (uint256);\\n\\n\\tfunction totalStakesSnapshot() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4e1f71cf4e8a516e92243085cf0f2f462cf71e2709b2266b36ab0e786bcd8ce3\",\"license\":\"MIT\"},\"contracts/interfaces/IWZeta.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IWZeta is IERC20 {\\n\\tfunction deposit() external payable;\\n\\tfunction withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xa03e3e9f9a4404351055ad95387f1a486f176291f310eed7a07509d2767787d6\",\"license\":\"MIT\"},\"contracts/interfaces/IZebraBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\ninterface IZebraBase {\\n\\tfunction DECIMAL_PRECISION() external view returns (uint256);\\n\\n\\t// Critical system collateral ratio. If the system's total collateral ratio (TCR) falls below the CCR, Recovery Mode is triggered.\\n\\tfunction CCR() external view returns (uint256); // 200%\\n\\n\\t// Amount of debt to be locked in gas pool on opening troves\\n\\tfunction DEBT_GAS_COMPENSATION() external view returns (uint256);\\n\\n\\tfunction PERCENT_DIVISOR() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4564d4a42c8586369e464c6d71de991a1521fdaf0e9411195f2b73847cbc55ab\",\"license\":\"MIT\"},\"contracts/interfaces/IZebraCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\ninterface IZebraCore {\\n\\tevent FeeReceiverSet(address feeReceiver);\\n\\tevent GuardianSet(address guardian);\\n\\tevent NewOwnerAccepted(address oldOwner, address owner);\\n\\tevent NewOwnerCommitted(address owner, address pendingOwner, uint256 deadline);\\n\\tevent NewOwnerRevoked(address owner, address revokedOwner);\\n\\tevent Paused();\\n\\tevent PriceFeedSet(address priceFeed);\\n\\tevent Unpaused();\\n\\n\\tfunction acceptTransferOwnership() external;\\n\\n\\tfunction commitTransferOwnership(address newOwner) external;\\n\\n\\tfunction revokeTransferOwnership() external;\\n\\n\\tfunction setFeeReceiver(address _feeReceiver) external;\\n\\n\\tfunction setGuardian(address _guardian) external;\\n\\n\\tfunction setPaused(bool _paused) external;\\n\\n\\tfunction setPriceFeed(address _priceFeed) external;\\n\\n\\tfunction OWNERSHIP_TRANSFER_DELAY() external view returns (uint256);\\n\\n\\tfunction feeReceiver() external view returns (address);\\n\\n\\tfunction guardian() external view returns (address);\\n\\n\\tfunction owner() external view returns (address);\\n\\n\\tfunction ownershipTransferDeadline() external view returns (uint256);\\n\\n\\tfunction paused() external view returns (bool);\\n\\n\\tfunction pendingOwner() external view returns (address);\\n\\n\\tfunction startTime() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x1fc4f5dd11e33a377d954cb7c45d16193f93bc3f47bb4dc1703e6794bc2053c9\",\"license\":\"MIT\"},\"contracts/interfaces/IZebraUSD.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\ninterface IZebraUSD {\\n\\tevent Approval(address indexed owner, address indexed spender, uint256 value);\\n\\tevent MessageFailed(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes _payload, bytes _reason);\\n\\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\tevent ReceiveFromChain(uint16 indexed _srcChainId, address indexed _to, uint256 _amount);\\n\\tevent RetryMessageSuccess(uint16 _srcChainId, bytes _srcAddress, uint64 _nonce, bytes32 _payloadHash);\\n\\tevent SendToChain(uint16 indexed _dstChainId, address indexed _from, bytes _toAddress, uint256 _amount);\\n\\tevent SetMinDstGas(uint16 _dstChainId, uint16 _type, uint256 _minDstGas);\\n\\tevent SetPrecrime(address precrime);\\n\\tevent SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n\\tevent SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n\\tevent SetUseCustomAdapterParams(bool _useCustomAdapterParams);\\n\\tevent Transfer(address indexed from, address indexed to, uint256 value);\\n\\n\\tfunction approve(address spender, uint256 amount) external returns (bool);\\n\\n\\tfunction burn(address _account, uint256 _amount) external;\\n\\n\\tfunction burnWithGasCompensation(address _account, uint256 _amount) external returns (bool);\\n\\n\\tfunction decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\\n\\n\\tfunction enableTroveManager(address _troveManager) external;\\n\\n\\tfunction flashLoan(address receiver, address token, uint256 amount, bytes calldata data) external returns (bool);\\n\\n\\tfunction forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n\\n\\tfunction increaseAllowance(address spender, uint256 addedValue) external returns (bool);\\n\\n\\tfunction lzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\n\\n\\tfunction mint(address _account, uint256 _amount) external;\\n\\n\\tfunction mintWithGasCompensation(address _account, uint256 _amount) external returns (bool);\\n\\n\\tfunction nonblockingLzReceive(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external;\\n\\n\\tfunction permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n\\tfunction renounceOwnership() external;\\n\\n\\tfunction returnFromPool(address _poolAddress, address _receiver, uint256 _amount) external;\\n\\n\\tfunction sendToSP(address _sender, uint256 _amount) external;\\n\\n\\tfunction setConfig(uint16 _version, uint16 _chainId, uint256 _configType, bytes calldata _config) external;\\n\\n\\tfunction setMinDstGas(uint16 _dstChainId, uint16 _packetType, uint256 _minGas) external;\\n\\n\\tfunction setPayloadSizeLimit(uint16 _dstChainId, uint256 _size) external;\\n\\n\\tfunction setPrecrime(address _precrime) external;\\n\\n\\tfunction setReceiveVersion(uint16 _version) external;\\n\\n\\tfunction setSendVersion(uint16 _version) external;\\n\\n\\tfunction setTrustedRemote(uint16 _srcChainId, bytes calldata _path) external;\\n\\n\\tfunction setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external;\\n\\n\\tfunction setUseCustomAdapterParams(bool _useCustomAdapterParams) external;\\n\\n\\tfunction transfer(address recipient, uint256 amount) external returns (bool);\\n\\n\\tfunction transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n\\tfunction transferOwnership(address newOwner) external;\\n\\n\\tfunction retryMessage(uint16 _srcChainId, bytes calldata _srcAddress, uint64 _nonce, bytes calldata _payload) external payable;\\n\\n\\tfunction sendFrom(address _from, uint16 _dstChainId, bytes calldata _toAddress, uint256 _amount, address _refundAddress, address _zroPaymentAddress, bytes calldata _adapterParams) external payable;\\n\\n\\tfunction DEBT_GAS_COMPENSATION() external view returns (uint256);\\n\\n\\tfunction DEFAULT_PAYLOAD_SIZE_LIMIT() external view returns (uint256);\\n\\n\\tfunction FLASH_LOAN_FEE() external view returns (uint256);\\n\\n\\tfunction NO_EXTRA_GAS() external view returns (uint256);\\n\\n\\tfunction PT_SEND() external view returns (uint16);\\n\\n\\tfunction allowance(address owner, address spender) external view returns (uint256);\\n\\n\\tfunction balanceOf(address account) external view returns (uint256);\\n\\n\\tfunction borrowerOperationsAddress() external view returns (address);\\n\\n\\tfunction circulatingSupply() external view returns (uint256);\\n\\n\\tfunction decimals() external view returns (uint8);\\n\\n\\tfunction domainSeparator() external view returns (bytes32);\\n\\n\\tfunction estimateSendFee(uint16 _dstChainId, bytes calldata _toAddress, uint256 _amount, bool _useZro, bytes calldata _adapterParams) external view returns (uint256 nativeFee, uint256 zroFee);\\n\\n\\tfunction factory() external view returns (address);\\n\\n\\tfunction failedMessages(uint16, bytes calldata, uint64) external view returns (bytes32);\\n\\n\\tfunction flashFee(address token, uint256 amount) external view returns (uint256);\\n\\n\\tfunction gasPool() external view returns (address);\\n\\n\\tfunction getConfig(uint16 _version, uint16 _chainId, address, uint256 _configType) external view returns (bytes memory);\\n\\n\\tfunction getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory);\\n\\n\\tfunction isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n\\tfunction lzEndpoint() external view returns (address);\\n\\n\\tfunction maxFlashLoan(address token) external view returns (uint256);\\n\\n\\tfunction minDstGasLookup(uint16, uint16) external view returns (uint256);\\n\\n\\tfunction name() external view returns (string memory);\\n\\n\\tfunction nonces(address owner) external view returns (uint256);\\n\\n\\tfunction owner() external view returns (address);\\n\\n\\tfunction payloadSizeLimitLookup(uint16) external view returns (uint256);\\n\\n\\tfunction permitTypeHash() external view returns (bytes32);\\n\\n\\tfunction precrime() external view returns (address);\\n\\n\\tfunction stabilityPoolAddress() external view returns (address);\\n\\n\\tfunction supportsInterface(bytes4 interfaceId) external view returns (bool);\\n\\n\\tfunction symbol() external view returns (string memory);\\n\\n\\tfunction token() external view returns (address);\\n\\n\\tfunction totalSupply() external view returns (uint256);\\n\\n\\tfunction troveManager(address) external view returns (bool);\\n\\n\\tfunction trustedRemoteLookup(uint16) external view returns (bytes memory);\\n\\n\\tfunction useCustomAdapterParams() external view returns (bool);\\n\\n\\tfunction version() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd553f52c1440a82e1b9af07320513dd4f934129811aba5d68554ebcd400f5f78\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101406040523480156200001257600080fd5b50604051620017db380380620017db8339810160408190526200003591620000fa565b6001600160a01b0386811660805285811660a05284811660c081905284821660e0819052848316610100529183166101205260405163095ea7b360e01b8152600481019290925260001960248301529063095ea7b3906044016020604051808303816000875af1158015620000ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d491906200018e565b50505050505050620001b9565b6001600160a01b0381168114620000f757600080fd5b50565b60008060008060008060c087890312156200011457600080fd5b86516200012181620000e1565b60208801519096506200013481620000e1565b60408801519095506200014781620000e1565b60608801519094506200015a81620000e1565b60808801519093506200016d81620000e1565b60a08801519092506200018081620000e1565b809150509295509295509295565b600060208284031215620001a157600080fd5b81518015158114620001b257600080fd5b9392505050565b60805160a05160c05160e05161010051610120516115716200026a60003960008181610181015261086b01526000818161023201526110370152600081816101b5015261070f01526000818160d2015281816105f20152818161067a01528181610a2e0152610acf0152600081816101fe015281816102db0152818161039601528181610906015281816109a70152610f7501526000818161013801528181610b4c0152610bd501526115716000f3fe6080604052600436106100bb5760003560e01c80638119c06511610074578063c6bbd5a71161004e578063c6bbd5a714610220578063e63ea40814610254578063e6877b0e1461027457600080fd5b80638119c065146101a35780638da5cb5b146101d75780639b0e384e146101ec57600080fd5b80632fbea014116100a55780632fbea01414610126578063452a93201461015a578063500d68471461016f57600080fd5b8062173d46146100c05780632338d37714610111575b600080fd5b3480156100cc57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61012461011f3660046111ac565b6102c0565b005b34801561013257600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b34801561016657600080fd5b506100f4610b48565b34801561017b57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b3480156101af57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e357600080fd5b506100f4610bd1565b3480156101f857600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b34801561022c57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b34801561026057600080fd5b5061012461026f3660046111fc565b610c31565b34801561028057600080fd5b5061029461028f36600461123d565b610dc3565b604080519384526fffffffffffffffffffffffffffffffff909216602084015290820152606001610108565b6040516370a0823160e01b81523360048201819052906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e91906112a1565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152306024830152604482018390529192507f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040591906112ba565b506040517f2b2b2bac0000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015260009190861690632b2b2bac906024016040805180830381865afa158015610468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048c91906112e3565b9150506000856001600160a01b0316634ba4a28b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f391906112a1565b6040517f55ca38cf0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018590528816906355ca38cf90604401602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906112a1565b6105879084611336565b610591919061134f565b90508083101561082b57600034116105f05760405162461bcd60e51b815260206004820152601160248201527f6e6f2065746865722070726f766964656400000000000000000000000000000060448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561064b57600080fd5b505af115801561065f573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600093507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506370a082319150602401602060405180830381865afa1580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef91906112a1565b6040805160a0810182528881523060208201529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163115ff67e918101610742888761134f565b6fffffffffffffffffffffffffffffffff1681526020018481526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8152506040518263ffffffff1660e01b815260040161079f91906113a8565b60408051808303816000875af19250505080156107d9575060408051601f3d908101601f191682019092526107d6918101906112e3565b60015b610827573d808015610807576040519150601f19603f3d011682016040523d82523d6000602084013e61080c565b606091505b508060405162461bcd60e51b81526004016105e79190611413565b5050505b6040517f5f5486140000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015285811660248301527f00000000000000000000000000000000000000000000000000000000000000001690635f54861490604401600060405180830381600087803b1580156108af57600080fd5b505af19250505080156108c0575060015b6108ee573d808015610807576040519150601f19603f3d011682016040523d82523d6000602084013e61080c565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097991906112a1565b90508015610a165760405163a9059cbb60e01b81526001600160a01b038681166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1491906112ba565b505b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa191906112a1565b90508015610b3e5760405163a9059cbb60e01b81526001600160a01b038781166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c91906112ba565b505b5050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663452a93206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190611426565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ba8573d6000803e3d6000fd5b610c39610bd1565b6001600160a01b0316336001600160a01b031614610c995760405162461bcd60e51b815260206004820152600a60248201527f4f6e6c79206f776e65720000000000000000000000000000000000000000000060448201526064016105e7565b6001600160a01b038316610d50576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610cf4576040519150601f19603f3d011682016040523d82523d6000602084013e610cf9565b606091505b5050905080610d4a5760405162461bcd60e51b815260206004820152601460248201527f7769746864726177207a657461206661696c656400000000000000000000000060448201526064016105e7565b50505050565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4a91906112ba565b6040517f2b2b2bac0000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152600091829182918291881690632b2b2bac906024016040805180830381865afa158015610e2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4e91906112e3565b9150506000876001600160a01b0316634ba4a28b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb591906112a1565b6040517f55ca38cf0000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018590528a16906355ca38cf90604401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f91906112a1565b610f499084611336565b610f53919061134f565b6040516370a0823160e01b81526001600160a01b0388811660048301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe291906112a1565b9450848111610ffa5750600092508291506110bb9050565b611004858261134f565b6040517f18ce06100000000000000000000000000000000000000000000000000000000081529094506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906318ce06109061106e9087908b90600401611443565b6000604051808303816000875af115801561108d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b59190810190611476565b50925050505b93509350939050565b6001600160a01b03811681146110d957600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611134576111346110dc565b604052919050565b600082601f83011261114d57600080fd5b813567ffffffffffffffff811115611167576111676110dc565b61117a6020601f19601f8401160161110b565b81815284602083860101111561118f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156111bf57600080fd5b82356111ca816110c4565b9150602083013567ffffffffffffffff8111156111e657600080fd5b6111f28582860161113c565b9150509250929050565b60008060006060848603121561121157600080fd5b833561121c816110c4565b9250602084013561122c816110c4565b929592945050506040919091013590565b60008060006060848603121561125257600080fd5b833561125d816110c4565b9250602084013567ffffffffffffffff81111561127957600080fd5b6112858682870161113c565b9250506040840135611296816110c4565b809150509250925092565b6000602082840312156112b357600080fd5b5051919050565b6000602082840312156112cc57600080fd5b815180151581146112dc57600080fd5b9392505050565b600080604083850312156112f657600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561134957611349611307565b92915050565b8181038181111561134957611349611307565b6000815180845260005b818110156113885760208185018101518683018201520161136c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000825160a060208401526113c460c0840182611362565b90506001600160a01b0360208501511660408401526fffffffffffffffffffffffffffffffff604085015116606084015260608401516080840152608084015160a08401528091505092915050565b6020815260006112dc6020830184611362565b60006020828403121561143857600080fd5b81516112dc816110c4565b6fffffffffffffffffffffffffffffffff8316815260406020820152600061146e6040830184611362565b949350505050565b6000806040838503121561148957600080fd5b8251915060208084015167ffffffffffffffff808211156114a957600080fd5b818601915086601f8301126114bd57600080fd5b8151818111156114cf576114cf6110dc565b8060051b91506114e084830161110b565b81815291830184019184810190898411156114fa57600080fd5b938501935b8385101561152b57845192508260020b831461151b5760008081fd5b82825293850193908501906114ff565b809650505050505050925092905056fea26469706673582212209815443cba70593aaabe8183c7a8cf1d89738331b4341b62b06e30ed3e8fda0264736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100bb5760003560e01c80638119c06511610074578063c6bbd5a71161004e578063c6bbd5a714610220578063e63ea40814610254578063e6877b0e1461027457600080fd5b80638119c065146101a35780638da5cb5b146101d75780639b0e384e146101ec57600080fd5b80632fbea014116100a55780632fbea01414610126578063452a93201461015a578063500d68471461016f57600080fd5b8062173d46146100c05780632338d37714610111575b600080fd5b3480156100cc57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61012461011f3660046111ac565b6102c0565b005b34801561013257600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b34801561016657600080fd5b506100f4610b48565b34801561017b57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b3480156101af57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e357600080fd5b506100f4610bd1565b3480156101f857600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b34801561022c57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b34801561026057600080fd5b5061012461026f3660046111fc565b610c31565b34801561028057600080fd5b5061029461028f36600461123d565b610dc3565b604080519384526fffffffffffffffffffffffffffffffff909216602084015290820152606001610108565b6040516370a0823160e01b81523360048201819052906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e91906112a1565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038481166004830152306024830152604482018390529192507f0000000000000000000000000000000000000000000000000000000000000000909116906323b872dd906064016020604051808303816000875af11580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040591906112ba565b506040517f2b2b2bac0000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015260009190861690632b2b2bac906024016040805180830381865afa158015610468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048c91906112e3565b9150506000856001600160a01b0316634ba4a28b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f391906112a1565b6040517f55ca38cf0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018590528816906355ca38cf90604401602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906112a1565b6105879084611336565b610591919061134f565b90508083101561082b57600034116105f05760405162461bcd60e51b815260206004820152601160248201527f6e6f2065746865722070726f766964656400000000000000000000000000000060448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561064b57600080fd5b505af115801561065f573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600093507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506370a082319150602401602060405180830381865afa1580156106cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ef91906112a1565b6040805160a0810182528881523060208201529192506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163115ff67e918101610742888761134f565b6fffffffffffffffffffffffffffffffff1681526020018481526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8152506040518263ffffffff1660e01b815260040161079f91906113a8565b60408051808303816000875af19250505080156107d9575060408051601f3d908101601f191682019092526107d6918101906112e3565b60015b610827573d808015610807576040519150601f19603f3d011682016040523d82523d6000602084013e61080c565b606091505b508060405162461bcd60e51b81526004016105e79190611413565b5050505b6040517f5f5486140000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015285811660248301527f00000000000000000000000000000000000000000000000000000000000000001690635f54861490604401600060405180830381600087803b1580156108af57600080fd5b505af19250505080156108c0575060015b6108ee573d808015610807576040519150601f19603f3d011682016040523d82523d6000602084013e61080c565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097991906112a1565b90508015610a165760405163a9059cbb60e01b81526001600160a01b038681166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1491906112ba565b505b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa191906112a1565b90508015610b3e5760405163a9059cbb60e01b81526001600160a01b038781166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c91906112ba565b505b5050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663452a93206040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190611426565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ba8573d6000803e3d6000fd5b610c39610bd1565b6001600160a01b0316336001600160a01b031614610c995760405162461bcd60e51b815260206004820152600a60248201527f4f6e6c79206f776e65720000000000000000000000000000000000000000000060448201526064016105e7565b6001600160a01b038316610d50576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610cf4576040519150601f19603f3d011682016040523d82523d6000602084013e610cf9565b606091505b5050905080610d4a5760405162461bcd60e51b815260206004820152601460248201527f7769746864726177207a657461206661696c656400000000000000000000000060448201526064016105e7565b50505050565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4a91906112ba565b6040517f2b2b2bac0000000000000000000000000000000000000000000000000000000081526001600160a01b038281166004830152600091829182918291881690632b2b2bac906024016040805180830381865afa158015610e2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4e91906112e3565b9150506000876001600160a01b0316634ba4a28b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb591906112a1565b6040517f55ca38cf0000000000000000000000000000000000000000000000000000000081526001600160a01b038881166004830152602482018590528a16906355ca38cf90604401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f91906112a1565b610f499084611336565b610f53919061134f565b6040516370a0823160e01b81526001600160a01b0388811660048301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe291906112a1565b9450848111610ffa5750600092508291506110bb9050565b611004858261134f565b6040517f18ce06100000000000000000000000000000000000000000000000000000000081529094506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906318ce06109061106e9087908b90600401611443565b6000604051808303816000875af115801561108d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b59190810190611476565b50925050505b93509350939050565b6001600160a01b03811681146110d957600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611134576111346110dc565b604052919050565b600082601f83011261114d57600080fd5b813567ffffffffffffffff811115611167576111676110dc565b61117a6020601f19601f8401160161110b565b81815284602083860101111561118f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156111bf57600080fd5b82356111ca816110c4565b9150602083013567ffffffffffffffff8111156111e657600080fd5b6111f28582860161113c565b9150509250929050565b60008060006060848603121561121157600080fd5b833561121c816110c4565b9250602084013561122c816110c4565b929592945050506040919091013590565b60008060006060848603121561125257600080fd5b833561125d816110c4565b9250602084013567ffffffffffffffff81111561127957600080fd5b6112858682870161113c565b9250506040840135611296816110c4565b809150509250925092565b6000602082840312156112b357600080fd5b5051919050565b6000602082840312156112cc57600080fd5b815180151581146112dc57600080fd5b9392505050565b600080604083850312156112f657600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561134957611349611307565b92915050565b8181038181111561134957611349611307565b6000815180845260005b818110156113885760208185018101518683018201520161136c565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000825160a060208401526113c460c0840182611362565b90506001600160a01b0360208501511660408401526fffffffffffffffffffffffffffffffff604085015116606084015260608401516080840152608084015160a08401528091505092915050565b6020815260006112dc6020830184611362565b60006020828403121561143857600080fd5b81516112dc816110c4565b6fffffffffffffffffffffffffffffffff8316815260406020820152600061146e6040830184611362565b949350505050565b6000806040838503121561148957600080fd5b8251915060208084015167ffffffffffffffff808211156114a957600080fd5b818601915086601f8301126114bd57600080fd5b8151818111156114cf576114cf6110dc565b8060051b91506114e084830161110b565b81815291830184019184810190898411156114fa57600080fd5b938501935b8385101561152b57845192508260020b831461151b5760008081fd5b82825293850193908501906114ff565b809650505050505050925092905056fea26469706673582212209815443cba70593aaabe8183c7a8cf1d89738331b4341b62b06e30ed3e8fda0264736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}